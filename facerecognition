#!/usr/local/bin/python
# IMPORTANT THE ABOVE SHOULD MATCH THE PATH TO PYTHON ON YOUR MACHINE

import faceDetection as tTest
import sys
import os
import crop
import cv2
from face_rec.recognize import EigenfaceRecon,FishRecon,EigenRecon
from face_rec.utils import make_array,judge
from PIL import Image
import matplotlib.pyplot as plt
import glob

import numpy as np


filepath = sys.argv[1]

rect = tTest.getRectangle(filepath)

contents = open('avgHW.csv','r').read()

H,W = contents.split(',')
H = int(H)
W = int(W)
centerY = (rect[3] + rect[1])/2
centerX = (rect[2] + rect[0])/2

# im = crop.cropp(filepath,rect)
# contents = open('avgHW.csv','r').read()

# H,W = contents.split(',')
# H = int(H)
# W = int(W)
# centerY = (rect[3] + rect[1])/2
# centerX = (rect[2] + rect[0])/2

im = crop.cropp(filepath,rect)

arr = np.asarray(im)
# plt.imshow(arr)
# plt.show()

################
########Use Fish
################
# recon = FishRecon('bin/phase2_fish_minsample/')
# best_idx,max_match = recon.recognize(arr.flatten())
# # print best_idx
# # print max_match
# if max_match > 15.5:
# 	print "This is : %r" % best_idx
# else:
# 	print "No match."

################
########Use Eigen
#################
# recon = EigenfaceRecon('bin/phase2_eigenfacial_minsample/')
# best_idx,max_match = recon.recognize(arr.flatten())
# print best_idx[:5]
# print max_match[:5]
# if max_match[0] < 10000:
# 	print "This is : %r" % best_idx[0]
# else:
# 	print "No match."

recon = FishRecon('bin/doug_last_minute/')
best_idx,max_match = recon.recognize(arr.flatten())
# print best_idx
# print max_match
with open('results_codejam.txt','a') as f:
	if max_match > 15.5:
		print "%s ---- is : %r" % (filepath, best_idx)
		f.write("\n%s ---- is : %r\n" % (filepath, best_idx))
	else:
		print "No match for %s" % filepath
		f.write("\nNo match for %s\n" % filepath)
